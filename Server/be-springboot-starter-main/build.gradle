plugins {
	id 'org.springframework.boot' version '2.7.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

javadoc.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'mysql:mysql-connector-java:8.0.28'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.mapstruct:mapstruct:1.5.1.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.1.Final'

	// JUnit5
	testImplementation("org.junit.platform:junit-platform-launcher:1.5.2")
	testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")

	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

	// Swagger
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// Spring Security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.7'

	// jwt
	implementation group: 'com.auth0', name: 'java-jwt', version: '3.10.3'
}

tasks.named('javadoc') {
	source = sourceSets.main.allJava
	options.memberLevel = JavadocMemberLevel.PRIVATE
	destinationDir = file("build/docs/javadoc")
}
